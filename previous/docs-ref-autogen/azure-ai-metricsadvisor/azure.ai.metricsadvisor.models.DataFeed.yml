### YamlMime:PythonClass
uid: azure.ai.metricsadvisor.models.DataFeed
name: DataFeed
fullName: azure.ai.metricsadvisor.models.DataFeed
module: azure.ai.metricsadvisor.models
inheritances:
- azure.ai.metricsadvisor.models._models.DataFeed
summary: Represents a data feed.
constructor:
  syntax: 'DataFeed(name: str, source: DataFeedSourceUnion, granularity: DataFeedGranularity,
    schema: DataFeedSchema, ingestion_settings: DataFeedIngestionSettings, **kwargs:
    Any)'
  parameters:
  - name: name
    description: Data feed name.
    isRequired: true
    types:
    - <xref:str>
  - name: schema
    description: Data feed schema
    isRequired: true
    types:
    - <xref:azure.ai.metricsadvisor.models.DataFeedSchema>
  - name: source
    description: Data feed source.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource>,
      <xref:azure.ai.metricsadvisor.models.AzureBlobDataFeedSource>, <xref:azure.ai.metricsadvisor.models.AzureCosmosDbDataFeedSource>,
      <xref:azure.ai.metricsadvisor.models.AzureDataExplorerDataFeedSource>, <xref:azure.ai.metricsadvisor.models.AzureDataLakeStorageGen2DataFeedSource>,
      <xref:azure.ai.metricsadvisor.models.AzureTableDataFeedSource>, <xref:azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource>,
      <xref:azure.ai.metricsadvisor.models.InfluxDbDataFeedSource>, <xref:azure.ai.metricsadvisor.models.MySqlDataFeedSource>,
      <xref:azure.ai.metricsadvisor.models.PostgreSqlDataFeedSource>, <xref:azure.ai.metricsadvisor.models.SqlServerDataFeedSource>,
      <xref:azure.ai.metricsadvisor.models.MongoDbDataFeedSource>, <xref:azure.ai.metricsadvisor.models.AzureLogAnalyticsDataFeedSource>]
  - name: granularity
    description: Granularity of the time series.
    isRequired: true
    types:
    - <xref:azure.ai.metricsadvisor.models.DataFeedGranularity>
  - name: ingestion_settings
    description: Data feed ingestion settings.
    isRequired: true
    types:
    - <xref:azure.ai.metricsadvisor.models.DataFeedIngestionSettings>
variables:
- description: Data feed created time.
  name: created_time
  types:
  - <xref:datetime.datetime>
- description: Granularity of the time series.
  name: granularity
  types:
  - <xref:azure.ai.metricsadvisor.models.DataFeedGranularity>
- description: Data feed unique id.
  name: id
  types:
  - <xref:str>
- description: Data feed ingestion settings.
  name: ingestion_settings
  types:
  - <xref:azure.ai.metricsadvisor.models.DataFeedIngestionSettings>
- description: Whether the query user is one of data feed administrators or not.
  name: is_admin
  types:
  - <xref:bool>
- description: metric name and metric id dict
  name: metric_ids
  types:
  - <xref:dict>
- description: Data feed name.
  name: name
  types:
  - <xref:str>
- description: Data feed schema
  name: schema
  types:
  - <xref:azure.ai.metricsadvisor.models.DataFeedSchema>
- description: Data feed source.
  name: source
  types:
  - <xref:typing.Union>[<xref:azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource>,
    <xref:azure.ai.metricsadvisor.models.AzureBlobDataFeedSource>, <xref:azure.ai.metricsadvisor.models.AzureCosmosDbDataFeedSource>,
    <xref:azure.ai.metricsadvisor.models.AzureDataExplorerDataFeedSource>, <xref:azure.ai.metricsadvisor.models.AzureDataLakeStorageGen2DataFeedSource>,
    <xref:azure.ai.metricsadvisor.models.AzureTableDataFeedSource>, <xref:azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource>,
    <xref:azure.ai.metricsadvisor.models.InfluxDbDataFeedSource>, <xref:azure.ai.metricsadvisor.models.MySqlDataFeedSource>,
    <xref:azure.ai.metricsadvisor.models.PostgreSqlDataFeedSource>, <xref:azure.ai.metricsadvisor.models.SqlServerDataFeedSource>,
    <xref:azure.ai.metricsadvisor.models.MongoDbDataFeedSource>, <xref:azure.ai.metricsadvisor.models.AzureLogAnalyticsDataFeedSource>]
- description: 'Data feed status. Possible values include: "Active", "Paused".

    Default value: "Active".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.ai.metricsadvisor.models.DataFeedStatus>
- description: Data feed administrators.
  name: admins
  types:
  - <xref:list>[<xref:str>]
- description: Data feed description.
  name: data_feed_description
  types:
  - <xref:str>
- description: The fill missing point type and value.
  name: missing_data_point_fill_settings
  types:
  - <xref:azure.ai.metricsadvisor.models.DataFeedMissingDataPointFillSettings>
- description: The rollup settings.
  name: rollup_settings
  types:
  - <xref:azure.ai.metricsadvisor.models.DataFeedRollupSettings>
- description: Data feed viewers.
  name: viewers
  types:
  - <xref:list>[<xref:str>]
- description: 'Data feed access mode. Possible values include:

    "Private", "Public". Default value: "Private".'
  name: access_mode
  types:
  - <xref:str>
  - <xref:azure.ai.metricsadvisor.models.DataFeedAccessMode>
- description: action link for alert.
  name: action_link_template
  types:
  - <xref:str>
methods:
- uid: azure.ai.metricsadvisor.models.DataFeed.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.metricsadvisor.models.DataFeed.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.ai.metricsadvisor.models.DataFeed.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.ai.metricsadvisor.models.DataFeed.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.ai.metricsadvisor.models.DataFeed.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.ai.metricsadvisor.models.DataFeed.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.metricsadvisor.models.DataFeed.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
